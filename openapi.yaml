openapi: 3.0.0
info:
  title: Friends API
  version: 1.0.0
paths:
  /:
    get:
      summary: Первая страница на которую попадает пользователь
      responses:
        '200':
          description: OK
  /users/log_in:
    post:
      summary: Контроллер для обработки запросов на вход пользователя
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/register:
    post:
      summary: Страница для регистрации пользователя
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/{user_id}/user_page:
    get:
      summary: Контроллер для основной страницы пользователя
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/{user_id}/friend_list:
    get:
      summary: Контроллер для странички отображающей всех друзей пользователя
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/{user_id}/friend-requests:
    get:
      summary: Контроллер для странички отображающей все запросы в друзья
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/{user_id}/{friend_id}/withdraw:
    post:
      summary: Контроллер для кнопки отклонения заявки в друзья
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
        - in: path
          name: friend_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/{user_id}/{friend_id}/{accepted}/add-friend/:
    post:
      summary: Контроллер для добавления в друзья пользователя
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
        - in: path
          name: friend_id
          schema:
            type: integer
          required: true
        - in: path
          name: accepted
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /users/{user_id}/{friend_id}/remove-friend:
    post:
      summary: Контроллер для кнопки удаления друга
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
        - in: path
          name: friend_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /404:
    get:
      summary: Если страница не найдена (404)
      responses:
        '404':
          description: Not Found
          content:
            text/html:
              schema:
                type: string
                example: HTML content
  /500:
    get:
      summary: Если ошибка сервера (500)
      responses:
        '500':
          description: Internal Server Error
          content:
            text/html:
              schema:
                type: string
                example: HTML content
components:
  schemas:
    User:
      type: object
      required:
        - id
        - username
      properties:
        id:
          type: integer
          format: int64
          example: 4
        username:
          type: string
          example: "Илья"

    FriendShip:
      type: object
      required:
        - user_id
        - friend_id
        - created_at
      properties:
        user_id:
          type: integer
          format: int64
          example: 4
        friend_id:
          type: integer
          example: 4
        created_at:
          type: string
          format: 2023-10-10-01T15:00:00+01


    FriendRequest:
      type: object
      required:
        - from_user
        - to_user
        - accepted
      properties:
        from_user:
          type: integer
          example: 4
        to_user:
          type: integer
        accepted:
          type: string
          example: "True"